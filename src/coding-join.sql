## 프로그래머스 - LV3 있었는데요 없었습니다
SELECT AO.ANIMAL_ID, AO.NAME
FROM ANIMAL_OUTS AO
LEFT JOIN ANIMAL_INS AI
ON AO.ANIMAL_ID = AI.ANIMAL_ID
WHERE AI.ANIMAL_ID IS NULL

## 프로그래머스 - LV3 없어진 기록 찾기
SELECT AI.ANIMAL_ID, AI.NAME
FROM ANIMAL_INS AI
LEFT JOIN ANIMAL_OUTS AO
ON AI.ANIMAL_ID = AO.ANIMAL_ID
WHERE AI.DATETIME >= AO.DATETIME
ORDER BY AI.DATETIME

## 프로그래머스 - LV3 오랜 기간 보호한 동물(1)
SELECT AI.NAME, AI.DATETIME
FROM ANIMAL_INS AI
LEFT JOIN ANIMAL_OUTS AO
ON AI.ANIMAL_ID = AO.ANIMAL_ID
WHERE AO.ANIMAL_ID IS NULL
ORDER BY AI.DATETIME ASC
LIMIT 3

## 프로그래머스 - LV4 보호소에서 중성화한 동물
SELECT AI.ANIMAL_ID, AI.ANIMAL_TYPE, AI.NAME
FROM ANIMAL_INS AI
LEFT JOIN ANIMAL_OUTS AO
ON AI.ANIMAL_ID = AO.ANIMAL_ID
WHERE AI.SEX_UPON_INTAKE LIKE 'Intact%'
AND AO.SEX_UPON_OUTCOME REGEXP('Spayed|Neutered')
ORDER BY AI.ANIMAL_ID

## 프로그래머스 - LV4 FrontEnd 개발자 찾기
SELECT DISTINCT A.ID, A.EMAIL, A.FIRST_NAME, A.LAST_NAME
FROM DEVELOPERS A
JOIN SKILLCODES B
ON A.SKILL_CODE & B.CODE
WHERE B.CATEGORY LIKE 'Front End'
ORDER BY A.ID

## 프로그래머스 - LV4 주문량이 많은 아이스크림 조회하기
SELECT A.FLAVOR
FROM FIRST_HALF A
JOIN (SELECT FLAVOR, SUM(TOTAL_ORDER) AS TOTAL_ORDER
     FROM JULY
     GROUP BY FLAVOR) B
ON A.FLAVOR = B.FLAVOR
ORDER BY A.TOTAL_ORDER + B.TOTAL_ORDER DESC
LIMIT 3

## 프로그래머스 - LV4 그룹별 조건에 맞는 식당 목록 출력하기
SELECT A.MEMBER_NAME, B.REVIEW_TEXT, DATE_FORMAT(B.REVIEW_DATE, "%Y-%m-%d") AS REVIEW_DATE
FROM MEMBER_PROFILE A
JOIN REST_REVIEW  B
ON A.MEMBER_ID = B.MEMBER_ID
WHERE A.MEMBER_ID = (SELECT MEMBER_ID
                     FROM REST_REVIEW
                     GROUP BY MEMBER_ID
                     ORDER BY COUNT(*) DESC LIMIT 1)
ORDER BY B.REVIEW_DATE ASC, B.REVIEW_TEXT ASC

## 프로그래머스 - LV4 5월의 식품들의 총매출 조회하기
SELECT A.PRODUCT_ID, A.PRODUCT_NAME, SUM(AMOUNT) * A.PRICE AS TOTAL_SALES
FROM FOOD_PRODUCT A
JOIN FOOD_ORDER B
ON A.PRODUCT_ID = B.PRODUCT_ID
WHERE B.PRODUCE_DATE LIKE '2022-05%'
GROUP BY A.PRODUCT_ID
ORDER BY TOTAL_SALES DESC, A.PRODUCT_ID ASC

## 프로그래머스 - LV4 특정 기간동안 대여 가능한 자동차들의 대여비용 구하기
SELECT C.CAR_ID as CAR_ID,
       C.CAR_TYPE as CAR_TYPE,
       ROUND(C.DAILY_FEE*30*(100-P.DISCOUNT_RATE)/100) AS FEE
    FROM CAR_RENTAL_COMPANY_CAR C
    JOIN CAR_RENTAL_COMPANY_RENTAL_HISTORY H ON C.CAR_ID = H.CAR_ID
    JOIN CAR_RENTAL_COMPANY_DISCOUNT_PLAN P ON C.CAR_TYPE = P.CAR_TYPE
    WHERE C.CAR_ID NOT IN (
        SELECT CAR_ID
        FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
        WHERE END_DATE >= '2022-11-01' AND START_DATE <= '2022-12-01')
        AND P.DURATION_TYPE like '30%'
GROUP BY C.CAR_ID
HAVING C.CAR_TYPE IN ('세단', 'SUV')
    AND (FEE >= 500000 AND FEE < 2000000)
ORDER BY FEE DESC, CAR_TYPE, CAR_ID DESC

## 프로그래머스 - LV5 상품을 구매한 회원 비율 구하기
SELECT DATE_FORMAT(B.SALES_DATE, '%Y') AS YEAR,
       DATE_FORMAT(B.SALES_DATE, '%m') AS MONTH,
       COUNT(DISTINCT A.USER_ID) AS PUCHASED_USERS,
       ROUND(COUNT(DISTINCT A.USER_ID)/(SELECT COUNT(*) FROM USER_INFO WHERE joined LIKE '2021%'), 1) AS PUCHASED_RATIO
FROM USER_INFO A
JOIN ONLINE_SALE B
ON A.USER_ID = B.USER_ID
WHERE A.JOINED LIKE '2021%'
GROUP BY YEAR, MONTH
ORDER BY YEAR, MONTH